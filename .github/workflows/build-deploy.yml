---

name: Build afterburner and deploy

on:
  workflow_call:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout afterburner repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set tag name
        run: |
          VERSION=$(cat ./VERSION)
          echo "TAG_NAME=$VERSION" >> $GITHUB_ENV
      # if no tag exists, this is expected to fail
      - name: Switch to git tag for release
        if: contains(env.TAG_NAME, 'SNAPSHOT') != true
        run: |
          git fetch --all --tags
          git checkout tags/${{ env.TAG_NAME }} -b ${{ env.TAG_NAME }}-tmp-branch
      - name: Set outputs for short git sha
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Check outputs for short git sha
        run: echo ${{ steps.vars.outputs.sha_short }}
      - name: Write tag to file
        uses: "finnp/create-file-action@master"
        env:
          FILE_NAME: "version.txt"
          FILE_DATA: "${{ env.TAG_NAME }}-${{ steps.vars.outputs.sha_short }}"
      - name: Upload versions.txt to use in performance-test job
        uses: actions/upload-artifact@v1
        with:
          name: version
          path: version.txt
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Build local
        working-directory: afterburner-java
        run: ../mvnw clean install
      # Build docker image
      - name: Create and push docker image
        working-directory: afterburner-java
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: ../mvnw -DdockerTargetImageExtension=${{ steps.vars.outputs.sha_short }} -Pmulti-arch-docker,pyroscope clean package jib:build

      ## checkout perfana-gitops
      - name: Checkout perfana-gitops
        uses: actions/checkout@v2
        with:
          repository: perfana/perfana-gitops
          token: ${{ secrets.PAT_GITHUB }}
          path: perfana-gitops
      - name: Replace image snapshot
        working-directory: perfana-gitops
        run: |
          repository="repository: perfana/afterburner"
          tag="tag: ${{ env.TAG_NAME }}-${{ steps.vars.outputs.sha_short }} # date: $(date +'%Y-%m-%dT%H:%M:%S')"
          echo "$repository"
          echo "$tag"
          ls -all
          sed -i "s|repository: .*|$repository|g" ./apps/acme/demo/optimus-prime-fe/values.yaml
          sed -i "s|repository: .*|$repository|g" ./apps/acme/demo/optimus-prime-be/values.yaml
          sed -i "s|tag: .*|$tag|g" ./apps/acme/demo/optimus-prime-fe/values.yaml
          sed -i "s|tag: .*|$tag|g" ./apps/acme/demo/optimus-prime-be/values.yaml
      - name: Commit files
        working-directory: perfana-gitops
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Bumped afterburner OptimusPrimes to ${{ env.TAG_NAME }} in demo environment" -a
          git push
          
      
