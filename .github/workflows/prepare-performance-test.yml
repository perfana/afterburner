---
name: Prepare for performance test

on:
  workflow_call:
    inputs:
      runner:
        type: string
        default: 'acme'
      service:
        type: string
        default: 'optimus-prime'


jobs:

  prepare-performance-test:
    runs-on: [self-hosted, acme]
    steps:
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        id: install
      - name: Checkout code from code branch
        uses: actions/checkout@v3
        with:
          path: main
          fetch-depth: 0
      - name: Download version file
        uses: actions/download-artifact@v1
        with:
          name: version
      - name: Set version from file
        run: |
          ls -all
          cat /runner/_work/afterburner/afterburner/version/version.txt
          echo "TAG_NAME=$(cat /runner/_work/afterburner/afterburner/version/version.txt)" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: get KUBECONFIG from secrets
        env:
          KUBECONFIG_TO_FILE: ${{secrets.KUBECONFIG_ACME}}
        run: echo "$KUBECONFIG_TO_FILE" | base64 --decode --ignore-garbage >> /runner/_work/afterburner/afterburner/config
      - name: Check deployed version
        env:
          KUBECONFIG: /runner/_work/afterburner/afterburner/config
          IMAGE: perfana/afterburner:${{ env.TAG_NAME }}
        run: |
          while true; do
             echo "Waiting for deployment ${{ inputs.service }}-fe-afterburner ..."
             if [[ $(kubectl get deployment ${{ inputs.service }}-fe-afterburner -n acme -o jsonpath='{$.spec.template.spec.containers[:1].image}') = $IMAGE ]]; then
                echo "Deployment ${{ inputs.service }}-fe-afterburner ready"
                break
             fi
             sleep 10
          done
          while true; do
             echo "Waiting for deployment ${{ inputs.service }}-be-afterburner ..."
             if [[ $(kubectl get deployment ${{ inputs.service }}-be-afterburner -n acme -o jsonpath='{$.spec.template.spec.containers[:1].image}') = $IMAGE ]]; then
                echo "Deployment ${{ inputs.service }}-be-afterburner ready"
                break
             fi
             sleep 10
          done
          echo "Deployment ready, waiting 60s to make sure pods have started"
          sleep 60
