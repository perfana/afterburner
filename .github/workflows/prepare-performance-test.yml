---
name: Prepare for performance test

on:
  workflow_call:
    inputs:
      runner:
        type: string
        default: 'acme'
      service:
        type: string
        default: 'optimus-prime'


jobs:

  prepare-performance-test:
    runs-on: [self-hosted, acme]
    steps:
      ## checkout perfana-gitops
      - name: Checkout perfana-gitops
        uses: actions/checkout@v4
        with:
          repository: perfana/perfana-gitops
          token: ${{ secrets.PAT_GITHUB }}
          ref: main
          path: perfana-gitops
          fetch-depth: 0
      - name: Find image version
        working-directory: perfana-gitops
        run: |
          echo "TAG_NAME=$(cat ./apps/acme/demo/${{ inputs.service }}-fe/values.yaml | awk '/tag:/ {print $2}')" >> $GITHUB_ENV
      - name: Install kubectl
        uses: Azure/setup-kubectl@v4.0.0
        id: install
      - name: Checkout code from code branch
        uses: actions/checkout@v4
        with:
          path: main
          fetch-depth: 0
      - name: get KUBECONFIG from secrets
        env:
          KUBECONFIG_TO_FILE: ${{secrets.KUBECONFIG_ACME}}
        run: echo "$KUBECONFIG_TO_FILE" | base64 --decode --ignore-garbage >> /runner/_work/afterburner/afterburner/config
      - name: Check deployed version fe-afterburner
        env:
          KUBECONFIG: /runner/_work/afterburner/afterburner/config
          IMAGE: perfana/afterburner:${{ env.TAG_NAME }}
        run: |
          DEPLOYMENT=${{ inputs.service }}-fe-afterburner
          while true; do
             echo "Waiting for deployment $DEPLOYMENT ..."
             if [[ $(kubectl get deployment $DEPLOYMENT -n acme -o jsonpath='{$.spec.template.spec.containers[:1].image}') = $IMAGE ]]; then
                echo "Deployment $DEPLOYMENT ready"
                break
             fi
          done
          ATTEMPTS=1
          ROLLOUT_STATUS_CMD="kubectl rollout status deployment/$DEPLOYMENT -n acme"
          until $ROLLOUT_STATUS_CMD || [ $ATTEMPTS -eq 60 ]; do
             echo "Waiting rollout status $DEPLOYMENT ... ($ATTEMPTS/60)"
             $ROLLOUT_STATUS_CMD
             ATTEMPTS=$((ATTEMPTS + 1))
             sleep 4
          done
      - name: Check deployed version be-afterburner
        env:
          KUBECONFIG: /runner/_work/afterburner/afterburner/config
          IMAGE: perfana/afterburner:${{ env.TAG_NAME }}
        run: |
          DEPLOYMENT=${{ inputs.service }}-be-afterburner
          while true; do
             echo "Waiting for deployment $DEPLOYMENT ..."
             if [[ $(kubectl get deployment $DEPLOYMENT -n acme -o jsonpath='{$.spec.template.spec.containers[:1].image}') = $IMAGE ]]; then
                echo "Deployment $DEPLOYMENT ready"
                break
             fi
          done
          ATTEMPTS=1
          ROLLOUT_STATUS_CMD="kubectl rollout status deployment/$DEPLOYMENT -n acme"
          until $ROLLOUT_STATUS_CMD || [ $ATTEMPTS -eq 60 ]; do
             echo "Waiting rollout status $DEPLOYMENT ... ($ATTEMPTS/60)"
             $ROLLOUT_STATUS_CMD
             ATTEMPTS=$((ATTEMPTS + 1))
             sleep 4
          done
