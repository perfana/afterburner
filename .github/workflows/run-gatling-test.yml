---
name: Run performance tests with Gatling

on:
  workflow_call:
    inputs:
      systemUnderTest:
        required: true
        type: string
      workload:
        required: true
        type: string
      service:
        required: true
        type: string
      annotations:
        required: false
        type: string
      runner:
        default: 'acme'
        type: string


jobs:

  performance-test-gatling:
    runs-on: ${{ (inputs.runner == 'test') && fromJSON('["self-hosted", "test"]') || (inputs.runner == 'acme-0') && fromJSON('["self-hosted", "acme-0"]') || fromJSON('["self-hosted", "acme"]') }}
    steps:
      - name: Install kubectl
        uses: Azure/setup-kubectl@v4.0.0
        id: install
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout afterburner repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: demo
      - name: Get commit message
        if: inputs.annotations == ''
        run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")" >> $GITHUB_ENV
      - name: Get commit sha
        run: echo "GIT_SHA=$(git rev-parse --verify demo)" >> $GITHUB_ENV
      - name: get KUBECONFIG from secrets
        env:
          KUBECONFIG_TO_FILE: ${{ (inputs.runner == 'test') && secrets.KUBECONFIG_TEST || secrets.KUBECONFIG_ACME }}
        run: |
          echo "$KUBECONFIG_TO_FILE" | base64 --decode --ignore-garbage >> /runner/_work/afterburner/afterburner/config
          kubectl config get-contexts
      - name: Get deployed version
        if: env.TAG_NAME == ''
        env:
          KUBECONFIG: /runner/_work/afterburner/afterburner/config
        run: |
          VERSION=$(kubectl get deployment ${{ inputs.service }}-fe-afterburner -n acme -o jsonpath='{$.spec.template.spec.containers[:1].image}' | cut -d ":" -f 2) 
          echo "TAG_NAME=$VERSION" >> $GITHUB_ENV
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.13.0
        with:
          java-version: 17
          maven-version: 3.6.3
      - name: Start Gatling test
        env:
          KUBECONFIG: /runner/_work/afterburner/afterburner/config
        run: |
          cd cicd/gatling
          # fetch gatling 2 influx tool
          # wget https://github.com/perfana/gatling-to-influxdb/releases/download/1.0.0-perfana/g2i
          wget -O g2i https://github.com/perfana/gatling-to-influxdb/releases/tag/g2i-1.0.9/g2i-linux-amd64
          chmod +x g2i
          # execute maven
          mvn clean install -U events-gatling:test -Ptest-env-demo,test-type-${{ inputs.workload }},assert-results \
          -Dsut-config=${{ inputs.service }} \
          -DtestRunId="${{ inputs.systemUnderTest }}-${{ github.job }}-${{ github.run_number }}-${{ github.run_id }}" \
          -DbuildResultsUrl="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
          -Dversion="${{ env.TAG_NAME }}" \
          -DgitSha="${{ env.GIT_SHA }}" \
          -DsystemUnderTest=${{ inputs.systemUnderTest }} \
          -DtestEnvironment=acme \
          -Dannotations="$COMMIT_MESSAGE" \
          -DapiKey=${{ secrets.PERFANA_APIKEY }} \
          -DtargetBaseUrl=http://${{ inputs.service }}-fe-afterburner.acme:8080 \
          -DinfluxUrl=${{ (inputs.runner == 'test') && 'http://influxdb.perfana:8086' || 'https://influx.demo.perfana.cloud' }} \
          -DinfluxUser=admin \
          -DinfluxPassword=${{ secrets.INFLUXDB_PASSWORD }} \
          -DelasticPassword=${{ secrets.ELASTIC_PASSWORD }} \
          -DperfanaUrl=${{ (inputs.runner == 'test') && 'http://perfana-fe.perfana:3000' || 'https://demo.perfana.cloud' }} \
          -Dscenario=acceptance
