# this name is also used in tracing
spring.application.name=Afterburner

server.port=8080
server.error.path=/error

# default is 200 threads, try to run with less
#server.tomcat.threads.max=30

afterburner.async_max_pool_size=40
afterburner.async_core_pool_size=20
afterburner.async_queue_size=1

#afterburner.remote.call.additional.headers={'secret-header':'XYZ123'}

afterburner.remote.call.httpclient.connect.timeout.millis=500
afterburner.remote.call.httpclient.socket.timeout.millis=6000
afterburner.remote.call.httpclient.connection.request.timeout.millis=400
afterburner.remote.call.httpclient.connections.max=60

logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.level.com.zaxxer.hikari=INFO

#Metrics related configurations
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# distributed tracing settings
# increase to activate, set to 1 to trace all calls
spring.sleuth.sampler.probability=0.1
spring.sleuth.keys.http.headers=perfana-test-run-id
spring.sleuth.propagation.tag.enabled=true
spring.sleuth.baggage.tag-fields=perfana-test-run-id
spring.sleuth.baggage.remote-fields=perfana-test-run-id
# sending data to zipkin server (e.g. jaeger), default disabled
spring.zipkin.enabled=false
spring.zipkin.base-url=http://localhost:9411/

# Creates span for every connection and query. Works only with p6spy or datasource-proxy.
spring.sleuth.jdbc.enabled=true
# Specify traces that will be created in zipkin: connection, query, fetch
spring.sleuth.jdbc.includes=connection,query,fetch
# use false (default) to exclude possible sensitive data (replace query params by ?)
spring.sleuth.jdbc.p6spy.tracing.include-parameter-values=true

decorator.datasource.p6spy.multiline=false

afterburner.datasource.basket.jdbc-url=jdbc:h2:mem:testdb
afterburner.datasource.basket.driver-class-name=org.h2.Driver
afterburner.datasource.basket.username=no-user
afterburner.datasource.basket.password=no-password
afterburner.datasource.basket.pool-name=basket-db-pool
afterburner.datasource.basket.connection-timeout=1000
afterburner.datasource.basket.idle-timeout=90000
afterburner.datasource.basket.max-lifetime=600000
afterburner.datasource.basket.maximum-pool-size=6
afterburner.datasource.basket.minimum-idle=3

afterburner.mybatis.configuration.default-fetch-size=10
# timeout not working?
afterburner.mybatis.configuration.default-statement-timeout=20

afterburner.datasource.employee.jdbc-url=jdbc:mariadb://localhost:3306/employees
afterburner.datasource.employee.driver-class-name=org.mariadb.jdbc.Driver
afterburner.datasource.employee.username=root
afterburner.datasource.employee.password=mypass
afterburner.datasource.employee.pool-name=employee-db-pool
afterburner.datasource.employee.connection-timeout=1000
afterburner.datasource.employee.idle-timeout=30000
afterburner.datasource.employee.max-lifetime=60000
afterburner.datasource.employee.maximum-pool-size=4
afterburner.datasource.employee.minimum-idle=4
# Do not try to initialize at startup, because db might not be there
# or is still starting... will fail lazy now instead of fail fast
# but app will start for requests that do no db access.
# Requests with db access might fail for some time until db is available.
afterburner.datasource.employee.initializationFailTimeout=-1

# set to debug to see http headers in the logging
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=INFO
logging.level.p6spy=INFO

# spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering.
# Explicitly configure spring.jpa.open-in-view to disable this warning
spring.jpa.open-in-view=false

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# swagger config
springdoc.swagger-ui.show-extensions=true
springdoc.swagger-ui.show-common-extensions=true