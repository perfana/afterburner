<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.perfana</groupId>
    <artifactId>perfana-neoload-afterburner</artifactId>
    <version>1.0-SNAPSHOT</version>

    <repositories>
        <repository>
            <id>sonatype-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases><enabled>false</enabled></releases>
            <snapshots><enabled>true</enabled></snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>sonatype-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases><enabled>false</enabled></releases>
            <snapshots><enabled>true</enabled></snapshots>
        </pluginRepository>
    </pluginRepositories>
    
    <properties>

        <encoding>UTF-8</encoding>

        <!-- dependency versioning -->
        <event-scheduler-maven-plugin.version>3.0.4</event-scheduler-maven-plugin.version>
        <perfana-java-client.version>[3.0.0,3.1.0)</perfana-java-client.version>
        <test-events-wiremock.version>[3.0.0,3.1.0)</test-events-wiremock.version>
        <test-events-springboot.version>[3.0.0,3.1.0)</test-events-springboot.version>
        <test-events-neoload.version>1.0.0-SNAPSHOT</test-events-neoload.version>
        <test-events-test-run-config-command.version>[3.0.0,3.1.0)</test-events-test-run-config-command.version>

        <!-- Perfana url  -->
        <perfanaUrl>https://demo.perfana.cloud</perfanaUrl>
        <wiremockUrl>http://wiremock:8080</wiremockUrl>
        <influxUrl>http://influx:8086</influxUrl>


        <!-- By default Jenkins build Url is used -->
        <CIBuildResultsUrl>${BUILD_URL}</CIBuildResultsUrl>

        <!-- By default send data to perfana -->
        <perfanaEnabled>true</perfanaEnabled>

        <!-- By default assert test results -->
        <assertResultsEnabled>true</assertResultsEnabled>

        <!-- By default enable events -->
        <eventsEnabled>true</eventsEnabled>
        <eventScheduleScript></eventScheduleScript>

        <!-- Settings for the Perfana Dashboard -->
        <systemUnderTest>JetFire</systemUnderTest>
        <version>1.0</version>
        <tags></tags>


    </properties>


    <build>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>io.perfana</groupId>
                    <artifactId>event-scheduler-maven-plugin</artifactId>
                    <version>${event-scheduler-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <id>timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>build.time</name>
                            <pattern>yyyyMMdd-HHmmss</pattern>
                            <timeZone>CET</timeZone>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.perfana</groupId>
                <artifactId>event-scheduler-maven-plugin</artifactId>
                <configuration>
                    <eventSchedulerConfig>
                        <debugEnabled>true</debugEnabled>
                        <schedulerEnabled>true</schedulerEnabled>
                        <failOnError>true</failOnError>
                        <continueOnEventCheckFailure>false</continueOnEventCheckFailure>
                        <testConfig>
                            <systemUnderTest>${systemUnderTest}</systemUnderTest>
                            <version>${version}</version>
                            <workload>${workload}</workload>
                            <testEnvironment>${testEnvironment}</testEnvironment>
                            <testRunId>${testRunId}</testRunId>
                            <buildResultsUrl>${buildResultsUrl}</buildResultsUrl>
                            <rampupTimeInSeconds>${rampUpTime}</rampupTimeInSeconds>
                            <constantLoadTimeInSeconds>${duration}</constantLoadTimeInSeconds>
                            <annotations>${annotations}</annotations>
                            <tags>${tags}</tags>
                        </testConfig>
                        <eventConfigs>
                            <eventConfig implementation="io.perfana.event.PerfanaEventConfig">
                                <name>PerfanaEvent</name>
                                <enabled>${perfanaEnabled}</enabled>
                                <perfanaUrl>${perfanaUrl}</perfanaUrl>
                                <apiKey>${apiKey}</apiKey>
                                <assertResultsEnabled>${assertResultsEnabled}</assertResultsEnabled>
                                <variables>
                                    <perfana-containers>.*afterburner-db.*|.*${sut-config}-fe.*|.*${sut-config}-be.*</perfana-containers>
                                    <perfana-pods>${sut-config}.*</perfana-pods>
                                </variables>
                            </eventConfig>
                            <eventConfig implementation="io.perfana.event.neoload.NeoloadEventConfig">
                                <name>NeoloadEvent</name>
                                <readyForStartParticipant>true</readyForStartParticipant>
                                <neoloadAccountToken>${neoloadAccountToken}</neoloadAccountToken>
                                <neoloadTestId>${neoloadTestId}</neoloadTestId>
                                <influxUrl>${influxUrl}</influxUrl>
                                <influxUser>${influxUser}</influxUser>
                                <influxPassword>${influxPassword}</influxPassword>
                                <influxDatabase>neoload</influxDatabase>
                            </eventConfig>
                            <eventConfig implementation="io.perfana.events.springboot.event.SpringBootEventConfig">
                                <name>ActuatorEventFrontend</name>
                                <tags>${sut-config}-fe</tags>
                                <actuatorBaseUrl>http://${sut-config}-fe-afterburner.acme:8080/actuator</actuatorBaseUrl>
                                <actuatorEnvProperties>
                                    java.runtime.version,
                                    JDK_JAVA_OPTIONS,
                                    afterburner.remote.call.httpclient.connection.request.timeout.millis,
                                    afterburner.remote.call.httpclient.socket.timeout.millis,
                                    afterburner.remote.call.httpclient.connect.timeout.millis,
                                    afterburner.remote.call.httpclient.connections.max,
                                    afterburner.remote.call.base_url,
                                    server.tomcat.threads.max,
                                    afterburner.async_max_pool_size,
                                    afterburner.async_core_pool_size,
                                    afterburner.async_queue_size,
                                    featureToggleIdentityMatrix
                                </actuatorEnvProperties>
                            </eventConfig>
                            <eventConfig implementation="io.perfana.events.springboot.event.SpringBootEventConfig">
                                <name>ActuatorEventBackend</name>
                                <tags>${sut-config}-be</tags>
                                <actuatorBaseUrl>http://${sut-config}-be-afterburner.acme:8080/actuator</actuatorBaseUrl>
                                <actuatorEnvProperties>
                                    java.runtime.version,
                                    JDK_JAVA_OPTIONS,
                                    afterburner.async_core_pool_size,
                                    afterburner.datasource.employee.maximum-pool-size
                                </actuatorEnvProperties>
                            </eventConfig>
                            <eventConfig implementation="io.perfana.events.testrunconfigcommand.TestRunConfigCommandEventConfig">
                                <name>GitGetHash</name>
                                <command>echo "${gitSha}"</command>
                                <output>key</output>
                                <key>https://github.com/perfana/afterburner</key>
                                <tags>GitHub</tags>
                            </eventConfig>
                            <eventConfig implementation="io.perfana.events.testrunconfigcommand.TestRunConfigCommandEventConfig">
                                <name>KubernetesGetDeploymentFE</name>
                                <command>kubectl get deployment ${sut-config}-fe-afterburner -n acme -ojson</command>
                                <includes>env,resources,image,replicas,strategy,kubernetes</includes>
                                <excludes>status,password,TOKEN</excludes>
                                <output>keys</output>
                                <tags>kubernetes,${sut-config}-fe</tags>
                            </eventConfig>
                            <eventConfig implementation="io.perfana.events.testrunconfigcommand.TestRunConfigCommandEventConfig">
                                <name>KubernetesGetDeploymentBE</name>
                                <command>kubectl get deployment ${sut-config}-be-afterburner -n acme -ojson</command>
                                <includes>env,resources,image,replicas,strategy,kubernetes</includes>
                                <excludes>status,password,TOKEN</excludes>
                                <output>keys</output>
                                <tags>kubernetes,${sut-config}-be</tags>
                            </eventConfig>
                            <eventConfig implementation="io.perfana.events.testrunconfigcommand.TestRunConfigCommandEventConfig">
                                <name>KubernetesGetDeploymentMySql</name>
                                <command>kubectl get statefulset afterburner-db-mysql -n acme -ojson</command>
                                <includes>env,resources,image,replicas,strategy,kubernetes</includes>
                                <excludes>status,password,secret</excludes>
                                <output>keys</output>
                                <tags>kubernetes,afterburner-db-mysql</tags>
                            </eventConfig>
                        </eventConfigs>
                    </eventSchedulerConfig>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>io.perfana</groupId>
                        <artifactId>test-events-neoload</artifactId>
                        <version>${test-events-neoload.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>io.perfana</groupId>
                        <artifactId>perfana-java-client</artifactId>
                        <version>${perfana-java-client.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>io.perfana</groupId>
                        <artifactId>test-events-springboot</artifactId>
                        <version>${test-events-springboot.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>io.perfana</groupId>
                        <artifactId>test-events-test-run-config-command</artifactId>
                        <version>${test-events-test-run-config-command.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>

    </build>


    <!-- ************************************************************************ ==
    == Below we have defined three sets of profiles, which control the type of    ==
    == test that will be run and the targeted testEnvironment.                        ==
    == If you wish to run a stress test on acceptance, use:                       ==
    == mvn perfana-jmeter:integration-test -Ptest-type-stress,test-env-acc       ==
    == ************************************************************************ -->

    <profiles>

        <profile>
            <id>assert-results</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <assertResultsEnabled>true</assertResultsEnabled>
            </properties>
        </profile>


        <!-- Test testEnvironment profiles -->

        <profile>
            <id>test-env-local</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <server_name>localhost</server_name>
                <port>8888</port>
                <testEnvironment>local</testEnvironment>
                <perfanaUrl>http://localhost:4000</perfanaUrl>
                <wiremockUrl>http://localhost:8060</wiremockUrl>
                <influxDbUrl>localhost</influxDbUrl>
            </properties>
        </profile>

        <profile>
            <id>test-env-demo</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <testEnvironment>acme</testEnvironment>
            </properties>
        </profile>

        <!-- Test type profiles -->

        <profile>
            <id>test-type-load</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <workload>neo-loadTest</workload>
                <duration>600</duration>
                <rampUpTime>60</rampUpTime>
                <perfanaEnabled>true</perfanaEnabled>
                <eventsEnabled>true</eventsEnabled>
                <tags>neoload,spring-boot-kubernetes,kubernetes,spanmetrics</tags>
            </properties>
        </profile>


    </profiles>
</project>

